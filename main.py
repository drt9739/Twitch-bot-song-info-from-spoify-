from twitchio.ext import commands

import config
import functions
import spotify_req


# This is the main code, do not touch anything to avoid problems

class Bot(commands.Bot):

    def __init__(self):

        super().__init__(token=config.TOKEN_TWITCH, prefix=config.PREFIX, initial_channels=config.channels)

    async def event_ready(self):
        print(f'Logged in as | {self.nick} | in channel {config.channels}')

    async def event_message(self, message):
        if message.echo:
            return
        print(message.content)

        await self.handle_commands(message)

    @commands.command()
    async def song(self, ctx: commands.Context):
        request = spotify_req.spotify_request()

        if spotify_req.status():
            if request['user'] == '':
                await ctx.send(
                    f'–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç —Ç—Ä–µ–∫ üéµ {request["name"]} - {request["autor"]}üéµ –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç—Ä–µ–∫ Baseg : '
                    f'{request["url"]}')
            else:
                await ctx.send(
                    f'–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç —Ç—Ä–µ–∫,  –∫–æ—Ç–æ—Ä—ã–π –∑–∞–∫–∞–∑–∞–ª {request["user"]}:üéµ {request["name"]} - {request["autor"]} '
                    f'üéµ '
                    f'–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç—Ä–µ–∫ Baseg : {request["url"]}')

        else:

            await ctx.send(f'–ù–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç Okayge')

    @commands.command()
    async def update(self, ctx: commands.Context):

        if ctx.message.author.is_mod:
            spotify_req.data_update()
            await ctx.send(f'–£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ :)')

        else:
            await ctx.send(f'–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–∏–º–µ—Ä—É –∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º StreamerDoesntKnow')

    @commands.command()
    async def sr(self, ctx: commands.Context):
        global sr_flag
        if ctx.message.content == '&sr' or ctx.message.content == '&sr ':
            await ctx.send(
                f'@{ctx.message.author.name}, —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å —Ç—Ä–µ–∫ –Ω—É–∂–Ω–æ —Å–∫–∏–Ω—É—Ç—å —Å—Å—ã–ª–∫–∞ –Ω–∞ spotify, '
                f'–Ω–∞–≤–∑–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞ –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —é—Ç—É–± '
                f'(–Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è —á—Ç–æ —Ç—Ä–µ–∫ –Ω–∞–π–¥—ë—Ç—Å—è —Ç–∞–∫–æ–π –∫–∞–∫–æ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ)')
        elif '&sr on' in ctx.message.content.lower() and ctx.message.author.is_mod:
            sr_flag = True
            await ctx.send(
                f'@{ctx.message.author.name}, –∑–∞–∫–∞–∑ —Ä–µ–∫–≤–µ—Å—Ç–æ–≤ –≤–∫–ª—é—á–µ–Ω :-D –ß—Ç–æ–±—ã –∑–∞–∫–∞—Ç—å —Ç—Ä–µ–∫ –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É &sr '
                f'<—Å—Å—ã–ª–∫–∞ –Ω–∞ —Ç—Ä–µ–∫>')
            await ctx.send(f'–°—Å—ã–ª–∫–∞ –º–æ–∂–µ—Ç –∫–∞–∫ –∏ –Ω–∞ youtube –∏ spotify. –¢–∞–∫–∂–µ —Ç—Ä–µ–∫ –º–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é B)')
        elif '&sr off' in ctx.message.content.lower() and ctx.message.author.is_mod:
            sr_flag = False
            await ctx.send(f'@{ctx.message.author.name}, –∑–∞–∫–∞–∑ —Ä–µ–∫–≤–µ—Å—Ç–æ–≤ –≤—ã–∫–ª—é—á–µ–Ω :( ')
        elif sr_flag:
            result = spotify_req.add_track_to_queue(functions.content_msg(ctx.message.content), ctx.message.author.name)
            await ctx.send(f'@{ctx.message.author.name} {result}')
        else:
            await ctx.send(f'@{ctx.message.author.name}, –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∑–∞–∫–∞–∑ —Ä–µ–∫–≤–µ—Å—Ç–æ–≤ –≤—ã–∫–ª—é—á–µ–Ω.')

    @commands.command()
    async def clear(self, ctx: commands.Context):
        if ctx.message.author.is_mod:
            result = spotify_req.clear_playlist(config.spotify_playlist_id)
            await ctx.send(f'@{ctx.author.name}, {result}')
        else:
            await ctx.send(f'@{ctx.author.name}, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ')

    @commands.command()
    async def volume(self, ctx: commands.Context, args1):
        try:
            volume = int(args1)
        except ValueError:
            await ctx.send(f'@{ctx.message.author.name}, –≤–≤–µ–¥–µ–Ω–æ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.')
        if volume in range(0, 100) and ctx.message.author.is_mod:
            result = spotify_req.spotify_volume(int(args1))
            await ctx.send(f'@{ctx.message.author.name}, {result}')
        else:
            await ctx.send(f'@{ctx.message.author.name}, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ')

    @commands.command()
    async def skip(self, ctx: commands.Context):
        if ctx.message.author.is_mod:
            result = spotify_req.skip()
            await ctx.send(f'@{ctx.message.author.name}, {result}')
        else:
            await ctx.send(f'@{ctx.message.author.name}, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ')

    @commands.command()
    async def play(self, ctx: commands.Context):
        if ctx.message.author.is_mod:
            result = spotify_req.play()
            await ctx.send(f'@{ctx.message.author.name}, {result}')

    @commands.command()
    async def stop(self, ctx: commands.Context):
        if ctx.message.author.is_mod:
            result = spotify_req.stop()
            await ctx.send(f'@{ctx.message.author.name}, {result}')

    @commands.command(name='—ç–º–æ—É—Ç—ã')
    async def emotes(self, ctx: commands.Context):
        await ctx.send(f'–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è —Ö—Ä–æ–º–∞: Betterttv (bttv)- https://betterttv.com/ ; 7tv - https://7tv.app/ ')
        await ctx.send(
            f'–ï—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—à—å –∑–∞–º–æ—Ä–∞—á–∏–≤–∞—Ç—å—Å—è –ø—Ä–æ—Å—Ç–æ —Å–∫–∞—á–∞–π chatterino. –ï—Å–ª–∏ —Ç—ã —Å windows, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ '
            f'windows-x86-64: https://github.com/SevenTV/chatterino7/releases/tag/nightly-build ')


sr_flag = False
bot = Bot()
bot.run()
